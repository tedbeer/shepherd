html,
body {
  height: 100%;
  overflow: hidden;
}

body {
  background-color: #62c462;
  background-image: linear-gradient(-45deg, #62c462, #75beaa);
  font-family: "proxima-nova", "Helvetica Neue", sans-serif;
  margin: 0;
}

.button {
  border: 2px solid #ffffff;
  color: #ffffff;
  cursor: pointer;
  display: inline-block;
  font-size: 0.8em;
  font-weight: 500;
  letter-spacing: 3px;
  line-height: 1.3em;
  padding: 1em 1.25em;
  text-decoration: none;
  text-transform: uppercase;
  width: 140px;
}

.button.dark {
  background: #ffffff;
  color: #75beaa;
}

@media (max-width: 568px) {
  .button {
    display: block;
    margin: 1em auto 0;
  }
}

.hero-scroll {
  height: 100%;
  overflow: auto;
  -webkit-overflow-scrolling: touch;
  width: 100%;
}

.hero-outer {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  display: table;
  height: 100%;
  padding: 20px 0;
  width: 100%;
}

.hero-outer .hero-inner {
  margin: 0 auto 1em;
  text-align: center;
  width: 540px;
}

@media (max-width: 600px) {
  .hero-outer .hero-inner {
    width: 340px;
  }
}

@media (max-width: 360px) {
  .hero-outer .hero-inner {
    width: 200px;
  }
}

.hero-outer .hero-inner h1,
.hero-outer .hero-inner h2,
.hero-outer .hero-inner h3,
.hero-outer .hero-inner p {
  color: #ffffff;
  font-weight: normal;
  line-height: 1;
  margin: 0 0 20px;
}

.hero-outer .hero-inner h3 {
  font-size: 1.3em;
  padding-top: 13px;
}

.hero-outer .hero-inner h1 {
  padding-top: 10px;
}

.hero-outer .hero-inner > * {
  opacity: 0.3;
  pointer-events: none;
  -webkit-transition: opacity 0.4s;
  transition: opacity 0.4s;
}

body:not(.shepherd-active) .hero-outer .hero-inner > * {
  opacity: 1;
  pointer-events: auto;
}

.hero-outer .hero-inner .shepherd-target.shepherd-enabled {
  opacity: 1;
  pointer-events: auto;
}

.hero-outer .hero-followup {
  padding-top: 20px;
}

pre {
  border: 1px solid rgba(0, 0, 0, 0.15);
  line-height: 1.4em;
}

/**
 * Styles to support usage of Tippy.js tooltips (https://atomiks.github.io/tippyjs)
 */
/**
 * Tippy tooltips have the following base structure:
 *
 * <div class="tippy-popper" x-placement="top">
 *   <div class="tippy-tooltip">
 *     <div class="tippy-content">
 *       [[ Content Here ]]
 *     </div>
 *   </div>
 * </div>
 */
.tippy-popper {
  z-index: 9999;
}

.tippy-popper .popper__arrow {
  border: 16px solid transparent;
  content: '';
  display: block;
  height: 0;
  pointer-events: none;
  position: absolute;
  width: 0;
}

.tippy-popper[x-placement^='top'] {
  margin-bottom: 16px;
}

.tippy-popper[x-placement^='top'] .popper__arrow {
  border-bottom: 0;
  border-top-color: #ffffff;
  bottom: -16px;
  left: calc(50% - 16px);
}

.tippy-popper[x-placement^='bottom'] {
  margin-top: 16px;
}

.tippy-popper[x-placement^='bottom'] .popper__arrow {
  border-bottom-color: #eeeeee;
  border-top: 0;
  left: calc(50% - 16px);
  top: -16px;
}

.tippy-popper[x-placement^='left'] {
  margin-right: 16px;
}

.tippy-popper[x-placement^='left'] .popper__arrow {
  border-left-color: #ffffff;
  border-right: 0;
  margin-top: -16px;
  right: -16px;
  top: calc(50% - 16px);
}

.tippy-popper[x-placement^='right'] {
  margin-left: 16px;
}

.tippy-popper[x-placement^='right'] .popper__arrow {
  border-left: 0;
  border-right-color: #ffffff;
  left: -16px;
  top: calc(50% - 16px);
}

.tippy-popper .tippy-tooltip {
  background-color: transparent;
  padding: 0;
  max-height: 100%;
  max-width: 100%;
  width: 420px;
}

.shepherd-element, .shepherd-element:after, .shepherd-element:before,
.shepherd-element *,
.shepherd-element *:after,
.shepherd-element *:before {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

.shepherd-element {
  -webkit-filter: drop-shadow(0 1px 4px rgba(0, 0, 0, 0.2));
          filter: drop-shadow(0 1px 4px rgba(0, 0, 0, 0.2));
}

.shepherd-element.shepherd-has-title .shepherd-content header {
  background: #eeeeee;
  padding: 1em;
}

.shepherd-element .shepherd-content {
  background: #ffffff;
  font-size: inherit;
  padding: 0;
}

.shepherd-element .shepherd-content header {
  *zoom: 1;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  border-top-left-radius: 5px;
  border-top-right-radius: 5px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  line-height: 2em;
  padding: 0.75em 0.75em 0;
}

.shepherd-element .shepherd-content header:after {
  clear: both;
  content: '';
  display: table;
}

.shepherd-element .shepherd-content header .shepherd-title,
.shepherd-element .shepherd-content header .shepherd-cancel-link {
  font-weight: normal;
  margin: 0;
  padding: 0;
  position: relative;
  vertical-align: middle;
}

.shepherd-element .shepherd-content header .shepherd-title {
  color: rgba(0, 0, 0, 0.75);
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-flex: 1;
      -ms-flex: 1 0 auto;
          flex: 1 0 auto;
  font-size: 1.1em;
}

.shepherd-element .shepherd-content header .shepherd-cancel-link {
  color: rgba(179, 179, 179, 0.75);
  font-size: 2em;
  margin-left: auto;
  text-decoration: none;
  -webkit-transition: color 0.5s ease;
  transition: color 0.5s ease;
}

.shepherd-element .shepherd-content header .shepherd-cancel-link:before {
  content: '\D7';
}

.shepherd-element .shepherd-content header .shepherd-cancel-link:hover {
  color: rgba(0, 0, 0, 0.75);
}

.shepherd-element .shepherd-content .shepherd-text {
  color: rgba(0, 0, 0, 0.75);
  line-height: 1.3em;
  padding: 0.75em;
}

.shepherd-element .shepherd-content .shepherd-text a,
.shepherd-element .shepherd-content .shepherd-text a:visited,
.shepherd-element .shepherd-content .shepherd-text a:active {
  border-bottom: 1px dotted;
  border-bottom-color: rgba(0, 0, 0, 0.75);
  color: rgba(0, 0, 0, 0.75);
  text-decoration: none;
}

.shepherd-element .shepherd-content .shepherd-text a:hover,
.shepherd-element .shepherd-content .shepherd-text a:visited:hover,
.shepherd-element .shepherd-content .shepherd-text a:active:hover {
  border-bottom-style: solid;
}

.shepherd-element .shepherd-content .shepherd-text p {
  margin-top: 0;
}

.shepherd-element .shepherd-content .shepherd-text p:last-child {
  margin-bottom: 0;
}

.shepherd-element .shepherd-content footer {
  border-bottom-left-radius: 5px;
  border-bottom-right-radius: 5px;
  padding: 0 0.75em 0.75em;
}

.shepherd-element .shepherd-content footer .shepherd-buttons {
  list-style: none;
  margin: 0;
  padding: 0;
  text-align: right;
}

.shepherd-element .shepherd-content footer .shepherd-buttons li {
  display: inline;
  margin: 0 0.5em 0 0;
}

.shepherd-element .shepherd-content footer .shepherd-buttons li:last-child {
  margin-right: 0;
}

.shepherd-element .shepherd-content footer .shepherd-buttons li .shepherd-button {
  display: inline-block;
  *display: inline;
  vertical-align: middle;
  *vertical-align: auto;
  *zoom: 1;
  background: #55a892;
  border: 0;
  border-radius: 3px;
  color: rgba(255, 255, 255, 0.75);
  cursor: pointer;
  font-family: inherit;
  font-size: 0.8em;
  letter-spacing: 0.1em;
  line-height: 1em;
  padding: 0.75em 2em;
  text-transform: uppercase;
  -webkit-transition: all 0.5s ease;
  transition: all 0.5s ease;
}

.shepherd-element .shepherd-content footer .shepherd-buttons li .shepherd-button:hover {
  background: #448675;
}

.shepherd-element .shepherd-content footer .shepherd-buttons li .shepherd-button.shepherd-button-secondary {
  background: #e5e5e5;
  color: rgba(0, 0, 0, 0.75);
}

.shepherd-element .shepherd-content footer .shepherd-buttons li .shepherd-button.shepherd-button-secondary:hover {
  background: #cbcbcb;
  color: rgba(0, 0, 0, 0.75);
}

.shepherd-welcome .popper__arrow {
  border: 16px solid transparent;
  content: '';
  display: block;
  height: 0;
  position: absolute;
  width: 0;
}

.shepherd-welcome[x-placement^='top'] {
  margin-bottom: 16px;
}

.shepherd-welcome[x-placement^='top'] .popper__arrow {
  border-bottom: 0;
  border-top-color: #ffffff;
  bottom: -16px;
  left: calc(50% - 16px);
}

.shepherd-welcome[x-placement^='bottom'] {
  margin-top: 16px;
}

.shepherd-welcome[x-placement^='bottom'] .popper__arrow {
  border-bottom-color: #ffffff;
  border-top: 0;
  left: calc(50% - 16px);
  top: -16px;
}

.shepherd-welcome[x-placement^='left'] {
  margin-right: 16px;
}

.shepherd-welcome[x-placement^='left'] .popper__arrow {
  border-left-color: #ffffff;
  border-right: 0;
  margin-top: -16px;
  right: -16px;
  top: calc(50% - 16px);
}

.shepherd-welcome[x-placement^='right'] {
  margin-left: 16px;
}

.shepherd-welcome[x-placement^='right'] .popper__arrow {
  border-left: 0;
  border-right-color: #ffffff;
  left: -16px;
  top: calc(50% - 16px);
}

.shepherd-welcome:not(.shepherd-has-title) .shepherd-content header,
.shepherd-welcome:not(.shepherd-has-title) .shepherd-content .shepherd-header {
  padding-bottom: 0;
}

.shepherd-welcome .shepherd-content header,
.shepherd-welcome .shepherd-content .shepherd-header {
  background: #ffffff;
}

.shepherd-welcome .shepherd-content .shepherd-text {
  color: #336457;
}

/*# sourceURL=/Users/brian/ship-shape/shepherd/docs/welcome/scss/welcome.scss */
/*# sourceURL=/Users/brian/ship-shape/shepherd/src/scss/_tippy.scss */
/*# sourceURL=/Users/brian/ship-shape/shepherd/src/scss/tippy/_base-tooltips.scss */
/*# sourceURL=/Users/brian/ship-shape/shepherd/src/scss/_variables.scss */
/*# sourceURL=/Users/brian/ship-shape/shepherd/src/scss/tippy/_popper-theme-arrows.scss */
/*# sourceURL=/Users/brian/ship-shape/shepherd/src/scss/helpers/_box-sizing.scss */
/*# sourceURL=/Users/brian/ship-shape/shepherd/src/scss/_base.scss */
/*# sourceURL=/Users/brian/ship-shape/shepherd/docs/welcome/scss/welcome.scss */
/*# sourceURL=/Users/brian/ship-shape/shepherd/src/scss/mixins/_pie-clearfix.scss */
/*# sourceURL=/Users/brian/ship-shape/shepherd/src/scss/_functions.scss */
/*# sourceURL=/Users/brian/ship-shape/shepherd/src/scss/mixins/_inline-block.scss */
/*# sourceURL=/Users/brian/ship-shape/shepherd/src/scss/mixins/_shepherd-button.scss */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9icmlhbi9zaGlwLXNoYXBlL3NoZXBoZXJkL2RvY3Mvd2VsY29tZS9zY3NzL3dlbGNvbWUuc2NzcyIsIi9Vc2Vycy9icmlhbi9zaGlwLXNoYXBlL3NoZXBoZXJkL3NyYy9zY3NzL190aXBweS5zY3NzIiwiL1VzZXJzL2JyaWFuL3NoaXAtc2hhcGUvc2hlcGhlcmQvc3JjL3Njc3MvdGlwcHkvX2Jhc2UtdG9vbHRpcHMuc2NzcyIsIi9Vc2Vycy9icmlhbi9zaGlwLXNoYXBlL3NoZXBoZXJkL3NyYy9zY3NzL192YXJpYWJsZXMuc2NzcyIsIi9Vc2Vycy9icmlhbi9zaGlwLXNoYXBlL3NoZXBoZXJkL3NyYy9zY3NzL3RpcHB5L19wb3BwZXItdGhlbWUtYXJyb3dzLnNjc3MiLCIvVXNlcnMvYnJpYW4vc2hpcC1zaGFwZS9zaGVwaGVyZC9zcmMvc2Nzcy9oZWxwZXJzL19ib3gtc2l6aW5nLnNjc3MiLCIvVXNlcnMvYnJpYW4vc2hpcC1zaGFwZS9zaGVwaGVyZC9zcmMvc2Nzcy9fYmFzZS5zY3NzIiwiL1VzZXJzL2JyaWFuL3NoaXAtc2hhcGUvc2hlcGhlcmQvZG9jcy93ZWxjb21lL3Njc3Mvd2VsY29tZS5zY3NzIiwiL1VzZXJzL2JyaWFuL3NoaXAtc2hhcGUvc2hlcGhlcmQvc3JjL3Njc3MvbWl4aW5zL19waWUtY2xlYXJmaXguc2NzcyIsIi9Vc2Vycy9icmlhbi9zaGlwLXNoYXBlL3NoZXBoZXJkL3NyYy9zY3NzL19mdW5jdGlvbnMuc2NzcyIsIi9Vc2Vycy9icmlhbi9zaGlwLXNoYXBlL3NoZXBoZXJkL3NyYy9zY3NzL21peGlucy9faW5saW5lLWJsb2NrLnNjc3MiLCIvVXNlcnMvYnJpYW4vc2hpcC1zaGFwZS9zaGVwaGVyZC9zcmMvc2Nzcy9taXhpbnMvX3NoZXBoZXJkLWJ1dHRvbi5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVFBOztFQUVFLGFBQVk7RUFDWixpQkFBZ0I7Q0FDakI7O0FBRUQ7RUFDRSwwQkFBa0M7RUFDbEMsNERB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QjtFQUNoQixvQkFBbUI7RUFDbkIsMEJBQXlCO0VBQ3pCLGtDQUF5QjtFQUF6QiwwQkFBeUI7Q0xzR2hCOztBQTdHWDtFS1VJLG9CQUErQztDQUNoRDs7QUxYSDtFS2NJLG9CUmpCMkU7RVFrQjNFLDJCRmpCZTtDRXVCaEI7O0FMckJIO0VLa0JNLG9CQUFpRDtFQUNqRCwyQkFBa0U7Q0FDbkU7O0FYZ0dMO0VJekhJLCtCQUFxQztFQUNyQyxZQUFXO0VBQ1gsZUFBYztFQUNkLFVBQVM7RUFFVCxtQkFBa0I7RUFDbEIsU0FBUTtDQUNUOztBSmtISDtFSTdHSSxvQkFkd0M7Q0FzQnpDOztBSnFHSDtFSTFHTSxpQkFBZ0I7RUFDaEIsMEJEYjRCO0VDYzVCLGNBbkJzQztFQW9CdEMsdUJBQWdDO0NBQ2pDOztBSnNHTDtFSWxHSSxpQkF6QndDO0NBaUN6Qzs7QUowRkg7RUkvRk0sNkJKZ0c0QztFSS9GNUMsY0FBYTtFQUNiLHVCQUFnQztFQUNoQyxXQS9Cc0M7Q0FnQ3ZDOztBSjJGTDtFSXZGSSxtQkFwQ3dDO0NBNkN6Qzs7QUo4RUg7RUlwRk0sMkJEbEM0QjtFQ21DNUIsZ0JBQWU7RUFDZixrQkF6Q3NDO0VBMEN0QyxhQTFDc0M7RUEyQ3RDLHNCQUErQjtDQUNoQzs7QUorRUw7RUkzRUksa0JBaER3QztDQXdEekM7O0FKbUVIO0VJeEVNLGVBQWM7RUFDZCw0QkQvQzRCO0VDZ0Q1QixZQXJEc0M7RUFzRHRDLHNCQUErQjtDQUNoQzs7QUpvRUw7O0VBTU0sa0JBQWlCO0NBQ2xCOztBQVBMOztFQWFNLG9CQUFtQjtDQUNwQjs7QUFkTDtFQWlCTSxlQUEwQztDQUMzQyIsImZpbGUiOiJ3ZWxjb21lLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGVtaW5nXG4kc2hlcGhlcmQtdGhlbWUtcHJpbWFyeTogIzU1YTg5MiAhZGVmYXVsdDtcbiRzaGVwaGVyZC1oZWFkZXItYmFja2dyb3VuZDogI2VlZWVlZSAhZGVmYXVsdDtcbiRzaGVwaGVyZC1lbGVtZW50LXdpZHRoOiA0MjBweCAhZGVmYXVsdDtcblxuLy8gRG9jc1xuJGNvbG9yLXdoaXRlOiAjZmZmZmZmICFkZWZhdWx0O1xuXG5odG1sLFxuYm9keSB7XG4gIGhlaWdodDogMTAwJTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuYm9keSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYig5OCwgMTk2LCA5OCk7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCgtNDVkZWcsIHJnYig5OCwgMTk2LCA5OCksIHJnYigxMTcsIDE5MCwgMTcwKSk7XG4gIGZvbnQtZmFtaWx5OiBcInByb3hpbWEtbm92YVwiLCBcIkhlbHZldGljYSBOZXVlXCIsIHNhbnMtc2VyaWY7XG4gIG1hcmdpbjogMDtcbn1cblxuLmJ1dHRvbiB7XG4gIGJvcmRlcjogMnB4IHNvbGlkICRjb2xvci13aGl0ZTtcbiAgY29sb3I6ICRjb2xvci13aGl0ZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGZvbnQtc2l6ZTogMC44ZW07XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGxldHRlci1zcGFjaW5nOiAzcHg7XG4gIGxpbmUtaGVpZ2h0OiAxLjNlbTtcbiAgcGFkZGluZzogMWVtIDEuMjVlbTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICB3aWR0aDogMTQwcHg7XG5cbiAgJi5kYXJrIHtcbiAgICBiYWNrZ3JvdW5kOiAkY29sb3Itd2hpdGU7XG4gICAgY29sb3I6IHJnYigxMTcsIDE5MCwgMTcwKTtcbiAgfVxuXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA1NjhweCkge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIG1hcmdpbjogMWVtIGF1dG8gMDtcbiAgfVxufVxuXG4uaGVyby1zY3JvbGwge1xuICBoZWlnaHQ6IDEwMCU7XG4gIG92ZXJmbG93OiBhdXRvO1xuICAtd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzogdG91Y2g7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uaGVyby1vdXRlciB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGRpc3BsYXk6IHRhYmxlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHBhZGRpbmc6IDIwcHggMDtcbiAgd2lkdGg6IDEwMCU7XG5cbiAgLmhlcm8taW5uZXIge1xuICAgIG1hcmdpbjogMCBhdXRvIDFlbTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgd2lkdGg6IDU0MHB4O1xuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDYwMHB4KSB7XG4gICAgICB3aWR0aDogMzQwcHg7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDM2MHB4KSB7XG4gICAgICB3aWR0aDogMjAwcHg7XG4gICAgfVxuXG4gICAgaDEsXG4gICAgaDIsXG4gICAgaDMsXG4gICAgcCB7XG4gICAgICBjb2xvcjogJGNvbG9yLXdoaXRlO1xuICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxO1xuICAgICAgbWFyZ2luOiAwIDAgMjBweDtcbiAgICB9XG5cbiAgICBoMyB7XG4gICAgICBmb250LXNpemU6IDEuM2VtO1xuICAgICAgcGFkZGluZy10b3A6IDEzcHg7XG4gICAgfVxuXG4gICAgaDEge1xuICAgICAgcGFkZGluZy10b3A6IDEwcHg7XG4gICAgfVxuXG4gICAgPiAqIHtcbiAgICAgIG9wYWNpdHk6IDAuMztcbiAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICAgICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjRzO1xuXG4gICAgICBib2R5Om5vdCguc2hlcGhlcmQtYWN0aXZlKSAmIHtcbiAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgICAgcG9pbnRlci1ldmVudHM6IGF1dG87XG4gICAgICB9XG4gICAgfVxuXG4gICAgLnNoZXBoZXJkLXRhcmdldC5zaGVwaGVyZC1lbmFibGVkIHtcbiAgICAgIG9wYWNpdHk6IDE7XG4gICAgICBwb2ludGVyLWV2ZW50czogYXV0bztcbiAgICB9XG4gIH1cblxuICAuaGVyby1mb2xsb3d1cCB7XG4gICAgcGFkZGluZy10b3A6IDIwcHg7XG4gIH1cbn1cblxucHJlIHtcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgwLCAwLCAwLCAwLjE1KTtcbiAgbGluZS1oZWlnaHQ6IDEuNGVtO1xufVxuXG4vLyBJbXBvcnQgYmFzZSB0aGVtZVxuQGltcG9ydCAnLi4vLi4vLi4vc3JjL3Njc3MvYmFzZSc7XG5cbi8vIE92ZXJ3cml0ZSB3ZWxjb21lLXN0ZXAgd2l0aCBjZXJ0YWluIGNsYXNzXG4uc2hlcGhlcmQtd2VsY29tZSB7XG4gIEBpbmNsdWRlIHBvcHBlci10aGVtZS1hcnJvd3MoJGhlYWRlci1iZzogI2ZmZmZmZik7XG5cbiAgJjpub3QoLnNoZXBoZXJkLWhhcy10aXRsZSkgLnNoZXBoZXJkLWNvbnRlbnQge1xuICAgIGhlYWRlcixcbiAgICAuc2hlcGhlcmQtaGVhZGVyIHtcbiAgICAgIHBhZGRpbmctYm90dG9tOiAwO1xuICAgIH1cbiAgfVxuXG4gIC5zaGVwaGVyZC1jb250ZW50IHtcbiAgICBoZWFkZXIsXG4gICAgLnNoZXBoZXJkLWhlYWRlciB7XG4gICAgICBiYWNrZ3JvdW5kOiAjZmZmZmZmO1xuICAgIH1cblxuICAgIC5zaGVwaGVyZC10ZXh0IHtcbiAgICAgIGNvbG9yOiBkYXJrZW4oJHNoZXBoZXJkLXRoZW1lLXByaW1hcnksIDIwKTtcbiAgICB9XG4gIH1cbn1cbiIsIi8qKlxuICogU3R5bGVzIHRvIHN1cHBvcnQgdXNhZ2Ugb2YgVGlwcHkuanMgdG9vbHRpcHMgKGh0dHBzOi8vYXRvbWlrcy5naXRodWIuaW8vdGlwcHlqcylcbiAqL1xuXG4gQGltcG9ydCAndGlwcHkvYmFzZS10b29sdGlwcyc7XG4iLCJAaW1wb3J0ICdwb3BwZXItdGhlbWUtYXJyb3dzJztcblxuLyoqXG4gKiBUaXBweSB0b29sdGlwcyBoYXZlIHRoZSBmb2xsb3dpbmcgYmFzZSBzdHJ1Y3R1cmU6XG4gKlxuICogPGRpdiBjbGFzcz1cInRpcHB5LXBvcHBlclwiIHgtcGxhY2VtZW50PVwidG9wXCI+XG4gKiAgIDxkaXYgY2xhc3M9XCJ0aXBweS10b29sdGlwXCI+XG4gKiAgICAgPGRpdiBjbGFzcz1cInRpcHB5LWNvbnRlbnRcIj5cbiAqICAgICAgIFtbIENvbnRlbnQgSGVyZSBdXVxuICogICAgIDwvZGl2PlxuICogICA8L2Rpdj5cbiAqIDwvZGl2PlxuICovXG5cbi50aXBweS1wb3BwZXIge1xuICBAaW5jbHVkZSBwb3BwZXItdGhlbWUtYXJyb3dzKCRhcnJvdy1zaXplOiAkYXJyb3ctc2l6ZSwgJGFycm93LXBvaW50ZXItZXZlbnRzOiAkYXJyb3ctcG9pbnRlci1ldmVudHMpO1xuXG4gIHotaW5kZXg6ICRzaGVwaGVyZC1lbGVtZW50LXotaW5kZXg7XG5cbiAgJiAudGlwcHktdG9vbHRpcCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgcGFkZGluZzogMDtcblxuICAgIG1heC1oZWlnaHQ6ICRzaGVwaGVyZC1lbGVtZW50LW1heC1oZWlnaHQ7XG4gICAgbWF4LXdpZHRoOiAkc2hlcGhlcmQtZWxlbWVudC1tYXgtd2lkdGg7XG4gICAgd2lkdGg6ICRzaGVwaGVyZC1lbGVtZW50LXdpZHRoO1xuICB9XG59XG5cbiIsIkBpbXBvcnQgJ2Z1bmN0aW9ucyc7XG5cbi8vIFRoZW1lIGNvbG9yc1xuJHNoZXBoZXJkLXRoZW1lLXByaW1hcnk6ICMzMjg4ZTYgIWRlZmF1bHQ7XG4kc2hlcGhlcmQtdGhlbWUtc2Vjb25kYXJ5OiBkZXNhdHVyYXRlKGxpZ2h0ZW4oJHNoZXBoZXJkLXRoZW1lLXByaW1hcnksIDQwKSwgNzApICFkZWZhdWx0O1xuJHNoZXBoZXJkLXRleHQtYmFja2dyb3VuZDogI2ZmZmZmZiAhZGVmYXVsdDtcbiRzaGVwaGVyZC1oZWFkZXItYmFja2dyb3VuZDogZGFya2VuKCRzaGVwaGVyZC10ZXh0LWJhY2tncm91bmQsIDEwKSAhZGVmYXVsdDtcblxuJHNoZXBoZXJkLXRoZW1lLXRleHQtY29sb3JzOiAoXG4gIHByaW1hcnk6IHJnYmEoc2V0LXRleHQtY29sb3IoJHNoZXBoZXJkLXRoZW1lLXByaW1hcnkpLCAwLjc1KSxcbiAgc2Vjb25kYXJ5OiByZ2JhKHNldC10ZXh0LWNvbG9yKCRzaGVwaGVyZC10aGVtZS1zZWNvbmRhcnkpLCAwLjc1KSxcbiAgaGVhZGVyOiByZ2JhKHNldC10ZXh0LWNvbG9yKCRzaGVwaGVyZC1oZWFkZXItYmFja2dyb3VuZCksIDAuNzUpLFxuICB0ZXh0OiByZ2JhKHNldC10ZXh0LWNvbG9yKCRzaGVwaGVyZC10ZXh0LWJhY2tncm91bmQpLCAwLjc1KVxuKSAhZGVmYXVsdDtcblxuLy8gVGhlbWUgb3B0aW9uc1xuJHNoZXBoZXJkLWVsZW1lbnQtd2lkdGg6IDQwMHB4ICFkZWZhdWx0O1xuJHNoZXBoZXJkLWVsZW1lbnQtYm9yZGVyLXJhZGl1czogNXB4ICFkZWZhdWx0O1xuJHNoZXBoZXJkLWVsZW1lbnQtbWF4LWhlaWdodDogMTAwJSAhZGVmYXVsdDtcbiRzaGVwaGVyZC1lbGVtZW50LW1heC13aWR0aDogMTAwJSAhZGVmYXVsdDtcbiRzaGVwaGVyZC1lbGVtZW50LXotaW5kZXg6IDk5OTkgIWRlZmF1bHQ7XG4kc2hlcGhlcmQtdGV4dC1saW5lLWhlaWdodDogMS4zZW0gIWRlZmF1bHQ7XG4kc2hlcGhlcmQtYnV0dG9uLWJvcmRlci1yYWRpdXM6IDNweCAhZGVmYXVsdDtcbiR1c2UtZHJvcC1zaGFkb3c6IHRydWUgIWRlZmF1bHQ7XG5cbi8vIFBvcHBlciBvcHRpb25zXG4kYXJyb3ctcG9pbnRlci1ldmVudHM6IG5vbmUgIWRlZmF1bHQ7XG4kYXJyb3ctc2l6ZTogMTZweCAhZGVmYXVsdDtcbiIsIkBtaXhpbiBwb3BwZXItdGhlbWUtYXJyb3dzKCRhcnJvdy1zaXplOiAxNnB4LCAkYXJyb3ctcG9pbnRlci1ldmVudHM6IG51bGwsICR0ZXh0LWJnOiAkc2hlcGhlcmQtdGV4dC1iYWNrZ3JvdW5kLCAkaGVhZGVyLWJnOiAkc2hlcGhlcmQtaGVhZGVyLWJhY2tncm91bmQpIHtcbiAgLnBvcHBlcl9fYXJyb3cge1xuICAgIGJvcmRlcjogJGFycm93LXNpemUgc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgY29udGVudDogJyc7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgaGVpZ2h0OiAwO1xuICAgIHBvaW50ZXItZXZlbnRzOiAkYXJyb3ctcG9pbnRlci1ldmVudHM7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHdpZHRoOiAwO1xuICB9XG5cbiAgLy8gQ2VudGVycyBhbmQgbWlkZGxlc1xuXG4gICZbeC1wbGFjZW1lbnRePSd0b3AnXSB7XG4gICAgbWFyZ2luLWJvdHRvbTogJGFycm93LXNpemU7XG5cbiAgICAucG9wcGVyX19hcnJvdyB7XG4gICAgICBib3JkZXItYm90dG9tOiAwO1xuICAgICAgYm9yZGVyLXRvcC1jb2xvcjogJHRleHQtYmc7XG4gICAgICBib3R0b206IC0kYXJyb3ctc2l6ZTtcbiAgICAgIGxlZnQ6IGNhbGMoNTAlIC0gI3skYXJyb3ctc2l6ZX0pO1xuICAgIH1cbiAgfVxuXG4gICZbeC1wbGFjZW1lbnRePSdib3R0b20nXSB7XG4gICAgbWFyZ2luLXRvcDogJGFycm93LXNpemU7XG5cbiAgICAucG9wcGVyX19hcnJvdyB7XG4gICAgICBib3JkZXItYm90dG9tLWNvbG9yOiAkaGVhZGVyLWJnO1xuICAgICAgYm9yZGVyLXRvcDogMDtcbiAgICAgIGxlZnQ6IGNhbGMoNTAlIC0gI3skYXJyb3ctc2l6ZX0pO1xuICAgICAgdG9wOiAtJGFycm93LXNpemU7XG4gICAgfVxuICB9XG5cbiAgJlt4LXBsYWNlbWVudF49J2xlZnQnXSB7XG4gICAgbWFyZ2luLXJpZ2h0OiAkYXJyb3ctc2l6ZTtcblxuICAgIC5wb3BwZXJfX2Fycm93IHtcbiAgICAgIGJvcmRlci1sZWZ0LWNvbG9yOiAkdGV4dC1iZztcbiAgICAgIGJvcmRlci1yaWdodDogMDtcbiAgICAgIG1hcmdpbi10b3A6IC0kYXJyb3ctc2l6ZTtcbiAgICAgIHJpZ2h0OiAtJGFycm93LXNpemU7XG4gICAgICB0b3A6IGNhbGMoNTAlIC0gI3skYXJyb3ctc2l6ZX0pO1xuICAgIH1cbiAgfVxuXG4gICZbeC1wbGFjZW1lbnRePSdyaWdodCddIHtcbiAgICBtYXJnaW4tbGVmdDogJGFycm93LXNpemU7XG5cbiAgICAucG9wcGVyX19hcnJvdyB7XG4gICAgICBib3JkZXItbGVmdDogMDtcbiAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogJHRleHQtYmc7XG4gICAgICBsZWZ0OiAtJGFycm93LXNpemU7XG4gICAgICB0b3A6IGNhbGMoNTAlIC0gI3skYXJyb3ctc2l6ZX0pO1xuICAgIH1cbiAgfVxufVxuXG4iLCJAbWl4aW4gYm94LXNpemluZygpIHtcbiAgLnNoZXBoZXJkLWVsZW1lbnQsXG4gIC5zaGVwaGVyZC1lbGVtZW50ICoge1xuICAgICYsXG4gICAgJjphZnRlcixcbiAgICAmOmJlZm9yZSB7XG4gICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgIH1cbiAgfVxufVxuIiwiQGltcG9ydCAndmFyaWFibGVzJztcbkBpbXBvcnQgJ21peGlucyc7XG5AaW1wb3J0ICdoZWxwZXJzJztcbkBpbXBvcnQgJ3RpcHB5JztcblxuQGluY2x1ZGUgYm94LXNpemluZygpO1xuXG4uc2hlcGhlcmQtZWxlbWVudCB7XG4gIC8vIEBpbmNsdWRlIHBvcHBlci10aGVtZS1hcnJvd3MoJGFycm93LXNpemU6ICRhcnJvdy1zaXplLCAkYXJyb3ctcG9pbnRlci1ldmVudHM6ICRhcnJvdy1wb2ludGVyLWV2ZW50cyk7XG5cbiAgQGlmICR1c2UtZHJvcC1zaGFkb3cge1xuICAgIGZpbHRlcjogZHJvcC1zaGFkb3coMCAxcHggNHB4IHJnYmEoMCwgMCwgMCwgMC4yKSk7XG4gIH1cblxuICAmLnNoZXBoZXJkLWhhcy10aXRsZSAuc2hlcGhlcmQtY29udGVudCBoZWFkZXIge1xuICAgIGJhY2tncm91bmQ6ICRzaGVwaGVyZC1oZWFkZXItYmFja2dyb3VuZDtcbiAgICBwYWRkaW5nOiAxZW07XG4gIH1cblxuICAuc2hlcGhlcmQtY29udGVudCB7XG4gICAgYmFja2dyb3VuZDogJHNoZXBoZXJkLXRleHQtYmFja2dyb3VuZDtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgcGFkZGluZzogMDtcblxuICAgIGhlYWRlciB7XG4gICAgICBAaW5jbHVkZSBwaWUtY2xlYXJmaXg7XG5cbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAkc2hlcGhlcmQtZWxlbWVudC1ib3JkZXItcmFkaXVzO1xuICAgICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6ICRzaGVwaGVyZC1lbGVtZW50LWJvcmRlci1yYWRpdXM7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICBsaW5lLWhlaWdodDogMmVtO1xuICAgICAgcGFkZGluZzogMC43NWVtIDAuNzVlbSAwO1xuXG4gICAgICAuc2hlcGhlcmQtdGl0bGUsXG4gICAgICAuc2hlcGhlcmQtY2FuY2VsLWxpbmsge1xuICAgICAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICAgIH1cblxuICAgICAgLnNoZXBoZXJkLXRpdGxlIHtcbiAgICAgICAgY29sb3I6IG1hcF9nZXQoJHNoZXBoZXJkLXRoZW1lLXRleHQtY29sb3JzLCBoZWFkZXIpO1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBmbGV4OiAxIDAgYXV0bztcbiAgICAgICAgZm9udC1zaXplOiAxLjFlbTtcbiAgICAgIH1cblxuICAgICAgLnNoZXBoZXJkLWNhbmNlbC1saW5rIHtcbiAgICAgICAgY29sb3I6IGxpZ2h0ZW4obWFwX2dldCgkc2hlcGhlcmQtdGhlbWUtdGV4dC1jb2xvcnMsIGhlYWRlciksIDcwKTtcbiAgICAgICAgZm9udC1zaXplOiAyZW07XG4gICAgICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgIHRyYW5zaXRpb246IGNvbG9yIDAuNXMgZWFzZTtcblxuICAgICAgICAmOmJlZm9yZSB7XG4gICAgICAgICAgY29udGVudDogJ1xcMDBkNyc7XG4gICAgICAgIH1cblxuICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICBjb2xvcjogbWFwX2dldCgkc2hlcGhlcmQtdGhlbWUtdGV4dC1jb2xvcnMsIGhlYWRlcik7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAuc2hlcGhlcmQtdGV4dCB7XG4gICAgICBjb2xvcjogbWFwX2dldCgkc2hlcGhlcmQtdGhlbWUtdGV4dC1jb2xvcnMsIHRleHQpO1xuICAgICAgbGluZS1oZWlnaHQ6ICRzaGVwaGVyZC10ZXh0LWxpbmUtaGVpZ2h0O1xuICAgICAgcGFkZGluZzogMC43NWVtO1xuXG4gICAgICBhLFxuICAgICAgYTp2aXNpdGVkLFxuICAgICAgYTphY3RpdmUge1xuICAgICAgICBib3JkZXItYm90dG9tOiAxcHggZG90dGVkO1xuICAgICAgICBib3JkZXItYm90dG9tLWNvbG9yOiBtYXBfZ2V0KCRzaGVwaGVyZC10aGVtZS10ZXh0LWNvbG9ycywgdGV4dCk7XG4gICAgICAgIGNvbG9yOiBtYXBfZ2V0KCRzaGVwaGVyZC10aGVtZS10ZXh0LWNvbG9ycywgdGV4dCk7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcblxuICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICBib3JkZXItYm90dG9tLXN0eWxlOiBzb2xpZDtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBwIHtcbiAgICAgICAgbWFyZ2luLXRvcDogMDtcblxuICAgICAgICAmOmxhc3QtY2hpbGQge1xuICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb290ZXIge1xuICAgICAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogJHNoZXBoZXJkLWVsZW1lbnQtYm9yZGVyLXJhZGl1cztcbiAgICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAkc2hlcGhlcmQtZWxlbWVudC1ib3JkZXItcmFkaXVzO1xuICAgICAgcGFkZGluZzogMCAwLjc1ZW0gMC43NWVtO1xuXG4gICAgICAuc2hlcGhlcmQtYnV0dG9ucyB7XG4gICAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7XG5cbiAgICAgICAgbGkge1xuICAgICAgICAgIGRpc3BsYXk6IGlubGluZTtcbiAgICAgICAgICBtYXJnaW46IDAgMC41ZW0gMCAwO1xuXG4gICAgICAgICAgJjpsYXN0LWNoaWxkIHtcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAuc2hlcGhlcmQtYnV0dG9uIHtcbiAgICAgICAgICAgIEBpbmNsdWRlIHNoZXBoZXJkLWJ1dHRvbjtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiIsImh0bWwsXG5ib2R5IHtcbiAgaGVpZ2h0OiAxMDAlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG5ib2R5IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzYyYzQ2MjtcbiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KC00NWRlZywgIzYyYzQ2MiwgIzc1YmVhYSk7XG4gIGZvbnQtZmFtaWx5OiBcInByb3hpbWEtbm92YVwiLCBcIkhlbHZldGljYSBOZXVlXCIsIHNhbnMtc2VyaWY7XG4gIG1hcmdpbjogMDtcbn1cblxuLmJ1dHRvbiB7XG4gIGJvcmRlcjogMnB4IHNvbGlkICNmZmZmZmY7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgZm9udC1zaXplOiAwLjhlbTtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgbGV0dGVyLXNwYWNpbmc6IDNweDtcbiAgbGluZS1oZWlnaHQ6IDEuM2VtO1xuICBwYWRkaW5nOiAxZW0gMS4yNWVtO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIHdpZHRoOiAxNDBweDtcbn1cblxuLmJ1dHRvbi5kYXJrIHtcbiAgYmFja2dyb3VuZDogI2ZmZmZmZjtcbiAgY29sb3I6ICM3NWJlYWE7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA1NjhweCkge1xuICAuYnV0dG9uIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW46IDFlbSBhdXRvIDA7XG4gIH1cbn1cblxuLmhlcm8tc2Nyb2xsIHtcbiAgaGVpZ2h0OiAxMDAlO1xuICBvdmVyZmxvdzogYXV0bztcbiAgLXdlYmtpdC1vdmVyZmxvdy1zY3JvbGxpbmc6IHRvdWNoO1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmhlcm8tb3V0ZXIge1xuICAtd2Via2l0LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgZGlzcGxheTogdGFibGU7XG4gIGhlaWdodDogMTAwJTtcbiAgcGFkZGluZzogMjBweCAwO1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmhlcm8tb3V0ZXIgLmhlcm8taW5uZXIge1xuICBtYXJnaW46IDAgYXV0byAxZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgd2lkdGg6IDU0MHB4O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNjAwcHgpIHtcbiAgLmhlcm8tb3V0ZXIgLmhlcm8taW5uZXIge1xuICAgIHdpZHRoOiAzNDBweDtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMzYwcHgpIHtcbiAgLmhlcm8tb3V0ZXIgLmhlcm8taW5uZXIge1xuICAgIHdpZHRoOiAyMDBweDtcbiAgfVxufVxuXG4uaGVyby1vdXRlciAuaGVyby1pbm5lciBoMSxcbi5oZXJvLW91dGVyIC5oZXJvLWlubmVyIGgyLFxuLmhlcm8tb3V0ZXIgLmhlcm8taW5uZXIgaDMsXG4uaGVyby1vdXRlciAuaGVyby1pbm5lciBwIHtcbiAgY29sb3I6ICNmZmZmZmY7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGxpbmUtaGVpZ2h0OiAxO1xuICBtYXJnaW46IDAgMCAyMHB4O1xufVxuXG4uaGVyby1vdXRlciAuaGVyby1pbm5lciBoMyB7XG4gIGZvbnQtc2l6ZTogMS4zZW07XG4gIHBhZGRpbmctdG9wOiAxM3B4O1xufVxuXG4uaGVyby1vdXRlciAuaGVyby1pbm5lciBoMSB7XG4gIHBhZGRpbmctdG9wOiAxMHB4O1xufVxuXG4uaGVyby1vdXRlciAuaGVyby1pbm5lciA+ICoge1xuICBvcGFjaXR5OiAwLjM7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICAtd2Via2l0LXRyYW5zaXRpb246IG9wYWNpdHkgMC40cztcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjRzO1xufVxuXG5ib2R5Om5vdCguc2hlcGhlcmQtYWN0aXZlKSAuaGVyby1vdXRlciAuaGVyby1pbm5lciA+ICoge1xuICBvcGFjaXR5OiAxO1xuICBwb2ludGVyLWV2ZW50czogYXV0bztcbn1cblxuLmhlcm8tb3V0ZXIgLmhlcm8taW5uZXIgLnNoZXBoZXJkLXRhcmdldC5zaGVwaGVyZC1lbmFibGVkIHtcbiAgb3BhY2l0eTogMTtcbiAgcG9pbnRlci1ldmVudHM6IGF1dG87XG59XG5cbi5oZXJvLW91dGVyIC5oZXJvLWZvbGxvd3VwIHtcbiAgcGFkZGluZy10b3A6IDIwcHg7XG59XG5cbnByZSB7XG4gIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4xNSk7XG4gIGxpbmUtaGVpZ2h0OiAxLjRlbTtcbn1cblxuLyoqXG4gKiBTdHlsZXMgdG8gc3VwcG9ydCB1c2FnZSBvZiBUaXBweS5qcyB0b29sdGlwcyAoaHR0cHM6Ly9hdG9taWtzLmdpdGh1Yi5pby90aXBweWpzKVxuICovXG4vKipcbiAqIFRpcHB5IHRvb2x0aXBzIGhhdmUgdGhlIGZvbGxvd2luZyBiYXNlIHN0cnVjdHVyZTpcbiAqXG4gKiA8ZGl2IGNsYXNzPVwidGlwcHktcG9wcGVyXCIgeC1wbGFjZW1lbnQ9XCJ0b3BcIj5cbiAqICAgPGRpdiBjbGFzcz1cInRpcHB5LXRvb2x0aXBcIj5cbiAqICAgICA8ZGl2IGNsYXNzPVwidGlwcHktY29udGVudFwiPlxuICogICAgICAgW1sgQ29udGVudCBIZXJlIF1dXG4gKiAgICAgPC9kaXY+XG4gKiAgIDwvZGl2PlxuICogPC9kaXY+XG4gKi9cbi50aXBweS1wb3BwZXIge1xuICB6LWluZGV4OiA5OTk5O1xufVxuXG4udGlwcHktcG9wcGVyIC5wb3BwZXJfX2Fycm93IHtcbiAgYm9yZGVyOiAxNnB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICBjb250ZW50OiAnJztcbiAgZGlzcGxheTogYmxvY2s7XG4gIGhlaWdodDogMDtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDA7XG59XG5cbi50aXBweS1wb3BwZXJbeC1wbGFjZW1lbnRePSd0b3AnXSB7XG4gIG1hcmdpbi1ib3R0b206IDE2cHg7XG59XG5cbi50aXBweS1wb3BwZXJbeC1wbGFjZW1lbnRePSd0b3AnXSAucG9wcGVyX19hcnJvdyB7XG4gIGJvcmRlci1ib3R0b206IDA7XG4gIGJvcmRlci10b3AtY29sb3I6ICNmZmZmZmY7XG4gIGJvdHRvbTogLTE2cHg7XG4gIGxlZnQ6IGNhbGMoNTAlIC0gMTZweCk7XG59XG5cbi50aXBweS1wb3BwZXJbeC1wbGFjZW1lbnRePSdib3R0b20nXSB7XG4gIG1hcmdpbi10b3A6IDE2cHg7XG59XG5cbi50aXBweS1wb3BwZXJbeC1wbGFjZW1lbnRePSdib3R0b20nXSAucG9wcGVyX19hcnJvdyB7XG4gIGJvcmRlci1ib3R0b20tY29sb3I6ICNlZWVlZWU7XG4gIGJvcmRlci10b3A6IDA7XG4gIGxlZnQ6IGNhbGMoNTAlIC0gMTZweCk7XG4gIHRvcDogLTE2cHg7XG59XG5cbi50aXBweS1wb3BwZXJbeC1wbGFjZW1lbnRePSdsZWZ0J10ge1xuICBtYXJnaW4tcmlnaHQ6IDE2cHg7XG59XG5cbi50aXBweS1wb3BwZXJbeC1wbGFjZW1lbnRePSdsZWZ0J10gLnBvcHBlcl9fYXJyb3cge1xuICBib3JkZXItbGVmdC1jb2xvcjogI2ZmZmZmZjtcbiAgYm9yZGVyLXJpZ2h0OiAwO1xuICBtYXJnaW4tdG9wOiAtMTZweDtcbiAgcmlnaHQ6IC0xNnB4O1xuICB0b3A6IGNhbGMoNTAlIC0gMTZweCk7XG59XG5cbi50aXBweS1wb3BwZXJbeC1wbGFjZW1lbnRePSdyaWdodCddIHtcbiAgbWFyZ2luLWxlZnQ6IDE2cHg7XG59XG5cbi50aXBweS1wb3BwZXJbeC1wbGFjZW1lbnRePSdyaWdodCddIC5wb3BwZXJfX2Fycm93IHtcbiAgYm9yZGVyLWxlZnQ6IDA7XG4gIGJvcmRlci1yaWdodC1jb2xvcjogI2ZmZmZmZjtcbiAgbGVmdDogLTE2cHg7XG4gIHRvcDogY2FsYyg1MCUgLSAxNnB4KTtcbn1cblxuLnRpcHB5LXBvcHBlciAudGlwcHktdG9vbHRpcCB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBwYWRkaW5nOiAwO1xuICBtYXgtaGVpZ2h0OiAxMDAlO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIHdpZHRoOiA0MjBweDtcbn1cblxuLnNoZXBoZXJkLWVsZW1lbnQsIC5zaGVwaGVyZC1lbGVtZW50OmFmdGVyLCAuc2hlcGhlcmQtZWxlbWVudDpiZWZvcmUsXG4uc2hlcGhlcmQtZWxlbWVudCAqLFxuLnNoZXBoZXJkLWVsZW1lbnQgKjphZnRlcixcbi5zaGVwaGVyZC1lbGVtZW50ICo6YmVmb3JlIHtcbiAgLXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbi5zaGVwaGVyZC1lbGVtZW50IHtcbiAgLXdlYmtpdC1maWx0ZXI6IGRyb3Atc2hhZG93KDAgMXB4IDRweCByZ2JhKDAsIDAsIDAsIDAuMikpO1xuICAgICAgICAgIGZpbHRlcjogZHJvcC1zaGFkb3coMCAxcHggNHB4IHJnYmEoMCwgMCwgMCwgMC4yKSk7XG59XG5cbi5zaGVwaGVyZC1lbGVtZW50LnNoZXBoZXJkLWhhcy10aXRsZSAuc2hlcGhlcmQtY29udGVudCBoZWFkZXIge1xuICBiYWNrZ3JvdW5kOiAjZWVlZWVlO1xuICBwYWRkaW5nOiAxZW07XG59XG5cbi5zaGVwaGVyZC1lbGVtZW50IC5zaGVwaGVyZC1jb250ZW50IHtcbiAgYmFja2dyb3VuZDogI2ZmZmZmZjtcbiAgZm9udC1zaXplOiBpbmhlcml0O1xuICBwYWRkaW5nOiAwO1xufVxuXG4uc2hlcGhlcmQtZWxlbWVudCAuc2hlcGhlcmQtY29udGVudCBoZWFkZXIge1xuICAqem9vbTogMTtcbiAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogNXB4O1xuICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogNXB4O1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LXBhY2s6IGNlbnRlcjtcbiAgICAgIC1tcy1mbGV4LXBhY2s6IGNlbnRlcjtcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgbGluZS1oZWlnaHQ6IDJlbTtcbiAgcGFkZGluZzogMC43NWVtIDAuNzVlbSAwO1xufVxuXG4uc2hlcGhlcmQtZWxlbWVudCAuc2hlcGhlcmQtY29udGVudCBoZWFkZXI6YWZ0ZXIge1xuICBjbGVhcjogYm90aDtcbiAgY29udGVudDogJyc7XG4gIGRpc3BsYXk6IHRhYmxlO1xufVxuXG4uc2hlcGhlcmQtZWxlbWVudCAuc2hlcGhlcmQtY29udGVudCBoZWFkZXIgLnNoZXBoZXJkLXRpdGxlLFxuLnNoZXBoZXJkLWVsZW1lbnQgLnNoZXBoZXJkLWNvbnRlbnQgaGVhZGVyIC5zaGVwaGVyZC1jYW5jZWwtbGluayB7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xufVxuXG4uc2hlcGhlcmQtZWxlbWVudCAuc2hlcGhlcmQtY29udGVudCBoZWFkZXIgLnNoZXBoZXJkLXRpdGxlIHtcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC43NSk7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtZmxleDogMTtcbiAgICAgIC1tcy1mbGV4OiAxIDAgYXV0bztcbiAgICAgICAgICBmbGV4OiAxIDAgYXV0bztcbiAgZm9udC1zaXplOiAxLjFlbTtcbn1cblxuLnNoZXBoZXJkLWVsZW1lbnQgLnNoZXBoZXJkLWNvbnRlbnQgaGVhZGVyIC5zaGVwaGVyZC1jYW5jZWwtbGluayB7XG4gIGNvbG9yOiByZ2JhKDE3OSwgMTc5LCAxNzksIDAuNzUpO1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBjb2xvciAwLjVzIGVhc2U7XG4gIHRyYW5zaXRpb246IGNvbG9yIDAuNXMgZWFzZTtcbn1cblxuLnNoZXBoZXJkLWVsZW1lbnQgLnNoZXBoZXJkLWNvbnRlbnQgaGVhZGVyIC5zaGVwaGVyZC1jYW5jZWwtbGluazpiZWZvcmUge1xuICBjb250ZW50OiAnXFwwMGQ3Jztcbn1cblxuLnNoZXBoZXJkLWVsZW1lbnQgLnNoZXBoZXJkLWNvbnRlbnQgaGVhZGVyIC5zaGVwaGVyZC1jYW5jZWwtbGluazpob3ZlciB7XG4gIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNzUpO1xufVxuXG4uc2hlcGhlcmQtZWxlbWVudCAuc2hlcGhlcmQtY29udGVudCAuc2hlcGhlcmQtdGV4dCB7XG4gIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNzUpO1xuICBsaW5lLWhlaWdodDogMS4zZW07XG4gIHBhZGRpbmc6IDAuNzVlbTtcbn1cblxuLnNoZXBoZXJkLWVsZW1lbnQgLnNoZXBoZXJkLWNvbnRlbnQgLnNoZXBoZXJkLXRleHQgYSxcbi5zaGVwaGVyZC1lbGVtZW50IC5zaGVwaGVyZC1jb250ZW50IC5zaGVwaGVyZC10ZXh0IGE6dmlzaXRlZCxcbi5zaGVwaGVyZC1lbGVtZW50IC5zaGVwaGVyZC1jb250ZW50IC5zaGVwaGVyZC10ZXh0IGE6YWN0aXZlIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IGRvdHRlZDtcbiAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjc1KTtcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC43NSk7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuLnNoZXBoZXJkLWVsZW1lbnQgLnNoZXBoZXJkLWNvbnRlbnQgLnNoZXBoZXJkLXRleHQgYTpob3Zlcixcbi5zaGVwaGVyZC1lbGVtZW50IC5zaGVwaGVyZC1jb250ZW50IC5zaGVwaGVyZC10ZXh0IGE6dmlzaXRlZDpob3Zlcixcbi5zaGVwaGVyZC1lbGVtZW50IC5zaGVwaGVyZC1jb250ZW50IC5zaGVwaGVyZC10ZXh0IGE6YWN0aXZlOmhvdmVyIHtcbiAgYm9yZGVyLWJvdHRvbS1zdHlsZTogc29saWQ7XG59XG5cbi5zaGVwaGVyZC1lbGVtZW50IC5zaGVwaGVyZC1jb250ZW50IC5zaGVwaGVyZC10ZXh0IHAge1xuICBtYXJnaW4tdG9wOiAwO1xufVxuXG4uc2hlcGhlcmQtZWxlbWVudCAuc2hlcGhlcmQtY29udGVudCAuc2hlcGhlcmQtdGV4dCBwOmxhc3QtY2hpbGQge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG4uc2hlcGhlcmQtZWxlbWVudCAuc2hlcGhlcmQtY29udGVudCBmb290ZXIge1xuICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiA1cHg7XG4gIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiA1cHg7XG4gIHBhZGRpbmc6IDAgMC43NWVtIDAuNzVlbTtcbn1cblxuLnNoZXBoZXJkLWVsZW1lbnQgLnNoZXBoZXJkLWNvbnRlbnQgZm9vdGVyIC5zaGVwaGVyZC1idXR0b25zIHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICB0ZXh0LWFsaWduOiByaWdodDtcbn1cblxuLnNoZXBoZXJkLWVsZW1lbnQgLnNoZXBoZXJkLWNvbnRlbnQgZm9vdGVyIC5zaGVwaGVyZC1idXR0b25zIGxpIHtcbiAgZGlzcGxheTogaW5saW5lO1xuICBtYXJnaW46IDAgMC41ZW0gMCAwO1xufVxuXG4uc2hlcGhlcmQtZWxlbWVudCAuc2hlcGhlcmQtY29udGVudCBmb290ZXIgLnNoZXBoZXJkLWJ1dHRvbnMgbGk6bGFzdC1jaGlsZCB7XG4gIG1hcmdpbi1yaWdodDogMDtcbn1cblxuLnNoZXBoZXJkLWVsZW1lbnQgLnNoZXBoZXJkLWNvbnRlbnQgZm9vdGVyIC5zaGVwaGVyZC1idXR0b25zIGxpIC5zaGVwaGVyZC1idXR0b24ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICpkaXNwbGF5OiBpbmxpbmU7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICp2ZXJ0aWNhbC1hbGlnbjogYXV0bztcbiAgKnpvb206IDE7XG4gIGJhY2tncm91bmQ6ICM1NWE4OTI7XG4gIGJvcmRlcjogMDtcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xuICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjc1KTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgZm9udC1zaXplOiAwLjhlbTtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMWVtO1xuICBsaW5lLWhlaWdodDogMWVtO1xuICBwYWRkaW5nOiAwLjc1ZW0gMmVtO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAwLjVzIGVhc2U7XG4gIHRyYW5zaXRpb246IGFsbCAwLjVzIGVhc2U7XG59XG5cbi5zaGVwaGVyZC1lbGVtZW50IC5zaGVwaGVyZC1jb250ZW50IGZvb3RlciAuc2hlcGhlcmQtYnV0dG9ucyBsaSAuc2hlcGhlcmQtYnV0dG9uOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogIzQ0ODY3NTtcbn1cblxuLnNoZXBoZXJkLWVsZW1lbnQgLnNoZXBoZXJkLWNvbnRlbnQgZm9vdGVyIC5zaGVwaGVyZC1idXR0b25zIGxpIC5zaGVwaGVyZC1idXR0b24uc2hlcGhlcmQtYnV0dG9uLXNlY29uZGFyeSB7XG4gIGJhY2tncm91bmQ6ICNlNWU1ZTU7XG4gIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNzUpO1xufVxuXG4uc2hlcGhlcmQtZWxlbWVudCAuc2hlcGhlcmQtY29udGVudCBmb290ZXIgLnNoZXBoZXJkLWJ1dHRvbnMgbGkgLnNoZXBoZXJkLWJ1dHRvbi5zaGVwaGVyZC1idXR0b24tc2Vjb25kYXJ5OmhvdmVyIHtcbiAgYmFja2dyb3VuZDogI2NiY2JjYjtcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC43NSk7XG59XG5cbi5zaGVwaGVyZC13ZWxjb21lIC5wb3BwZXJfX2Fycm93IHtcbiAgYm9yZGVyOiAxNnB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICBjb250ZW50OiAnJztcbiAgZGlzcGxheTogYmxvY2s7XG4gIGhlaWdodDogMDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMDtcbn1cblxuLnNoZXBoZXJkLXdlbGNvbWVbeC1wbGFjZW1lbnRePSd0b3AnXSB7XG4gIG1hcmdpbi1ib3R0b206IDE2cHg7XG59XG5cbi5zaGVwaGVyZC13ZWxjb21lW3gtcGxhY2VtZW50Xj0ndG9wJ10gLnBvcHBlcl9fYXJyb3cge1xuICBib3JkZXItYm90dG9tOiAwO1xuICBib3JkZXItdG9wLWNvbG9yOiAjZmZmZmZmO1xuICBib3R0b206IC0xNnB4O1xuICBsZWZ0OiBjYWxjKDUwJSAtIDE2cHgpO1xufVxuXG4uc2hlcGhlcmQtd2VsY29tZVt4LXBsYWNlbWVudF49J2JvdHRvbSddIHtcbiAgbWFyZ2luLXRvcDogMTZweDtcbn1cblxuLnNoZXBoZXJkLXdlbGNvbWVbeC1wbGFjZW1lbnRePSdib3R0b20nXSAucG9wcGVyX19hcnJvdyB7XG4gIGJvcmRlci1ib3R0b20tY29sb3I6ICNmZmZmZmY7XG4gIGJvcmRlci10b3A6IDA7XG4gIGxlZnQ6IGNhbGMoNTAlIC0gMTZweCk7XG4gIHRvcDogLTE2cHg7XG59XG5cbi5zaGVwaGVyZC13ZWxjb21lW3gtcGxhY2VtZW50Xj0nbGVmdCddIHtcbiAgbWFyZ2luLXJpZ2h0OiAxNnB4O1xufVxuXG4uc2hlcGhlcmQtd2VsY29tZVt4LXBsYWNlbWVudF49J2xlZnQnXSAucG9wcGVyX19hcnJvdyB7XG4gIGJvcmRlci1sZWZ0LWNvbG9yOiAjZmZmZmZmO1xuICBib3JkZXItcmlnaHQ6IDA7XG4gIG1hcmdpbi10b3A6IC0xNnB4O1xuICByaWdodDogLTE2cHg7XG4gIHRvcDogY2FsYyg1MCUgLSAxNnB4KTtcbn1cblxuLnNoZXBoZXJkLXdlbGNvbWVbeC1wbGFjZW1lbnRePSdyaWdodCddIHtcbiAgbWFyZ2luLWxlZnQ6IDE2cHg7XG59XG5cbi5zaGVwaGVyZC13ZWxjb21lW3gtcGxhY2VtZW50Xj0ncmlnaHQnXSAucG9wcGVyX19hcnJvdyB7XG4gIGJvcmRlci1sZWZ0OiAwO1xuICBib3JkZXItcmlnaHQtY29sb3I6ICNmZmZmZmY7XG4gIGxlZnQ6IC0xNnB4O1xuICB0b3A6IGNhbGMoNTAlIC0gMTZweCk7XG59XG5cbi5zaGVwaGVyZC13ZWxjb21lOm5vdCguc2hlcGhlcmQtaGFzLXRpdGxlKSAuc2hlcGhlcmQtY29udGVudCBoZWFkZXIsXG4uc2hlcGhlcmQtd2VsY29tZTpub3QoLnNoZXBoZXJkLWhhcy10aXRsZSkgLnNoZXBoZXJkLWNvbnRlbnQgLnNoZXBoZXJkLWhlYWRlciB7XG4gIHBhZGRpbmctYm90dG9tOiAwO1xufVxuXG4uc2hlcGhlcmQtd2VsY29tZSAuc2hlcGhlcmQtY29udGVudCBoZWFkZXIsXG4uc2hlcGhlcmQtd2VsY29tZSAuc2hlcGhlcmQtY29udGVudCAuc2hlcGhlcmQtaGVhZGVyIHtcbiAgYmFja2dyb3VuZDogI2ZmZmZmZjtcbn1cblxuLnNoZXBoZXJkLXdlbGNvbWUgLnNoZXBoZXJkLWNvbnRlbnQgLnNoZXBoZXJkLXRleHQge1xuICBjb2xvcjogIzMzNjQ1Nztcbn1cbiIsIkBtaXhpbiBwaWUtY2xlYXJmaXgge1xuICAqem9vbTogMTtcblxuICAmOmFmdGVyIHtcbiAgICBjbGVhcjogYm90aDtcbiAgICBjb250ZW50OiAnJztcbiAgICBkaXNwbGF5OiB0YWJsZTtcbiAgfVxufVxuIiwiLy8gVG9EbzogTW9yZSByZWxpYWJsZSBmdW5jdGlvbiB0byBnZXQgYmVzdCByZWFkYWJsZSB0ZXh0IGNvbG9yXG4vLyBNREMtV2ViIGhhcyBzb21lIHZlcnkgdXNlZnVsIGZ1bmN0aW9ucyBhdCBodHRwczovL2dpdGh1Yi5jb20vbWF0ZXJpYWwtY29tcG9uZW50cy9tYXRlcmlhbC1jb21wb25lbnRzLXdlYi9ibG9iL21hc3Rlci9wYWNrYWdlcy9tZGMtdGhlbWUvX2Z1bmN0aW9ucy5zY3NzXG4vLyBNb3JlIGRldGFpbHMgYXQgaHR0cHM6Ly9tZWRpdW0uY29tL2Rldi1jaGFubmVsL3VzaW5nLXNhc3MtdG8tYXV0b21hdGljYWxseS1waWNrLXRleHQtY29sb3JzLTRiYTc2NDVkMjc5NlxuQGZ1bmN0aW9uIHNldC10ZXh0LWNvbG9yKCRjb2xvcikge1xuICBAaWYgKGxpZ2h0bmVzcygkY29sb3IpID4gNjApIHtcbiAgICBAcmV0dXJuICMwMDAwMDA7XG4gIH1cbiAgQGVsc2Uge1xuICAgIEByZXR1cm4gI2ZmZmZmZjtcbiAgfVxufVxuIiwiQG1peGluIGlubGluZS1ibG9jayB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgKmRpc3BsYXk6IGlubGluZTtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgKnZlcnRpY2FsLWFsaWduOiBhdXRvO1xuICAqem9vbTogMTtcbn1cbiIsIkBtaXhpbiBzaGVwaGVyZC1idXR0b24ge1xuICBAaW5jbHVkZSBpbmxpbmUtYmxvY2s7XG5cbiAgYmFja2dyb3VuZDogJHNoZXBoZXJkLXRoZW1lLXByaW1hcnk7XG4gIGJvcmRlcjogMDtcbiAgYm9yZGVyLXJhZGl1czogJHNoZXBoZXJkLWJ1dHRvbi1ib3JkZXItcmFkaXVzO1xuICBjb2xvcjogbWFwX2dldCgkc2hlcGhlcmQtdGhlbWUtdGV4dC1jb2xvcnMsIHByaW1hcnkpO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICBmb250LXNpemU6IDAuOGVtO1xuICBsZXR0ZXItc3BhY2luZzogMC4xZW07XG4gIGxpbmUtaGVpZ2h0OiAxZW07XG4gIHBhZGRpbmc6IDAuNzVlbSAyZW07XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIHRyYW5zaXRpb246IGFsbCAwLjVzIGVhc2U7XG5cbiAgJjpob3ZlciB7XG4gICAgYmFja2dyb3VuZDogZGFya2VuKCRzaGVwaGVyZC10aGVtZS1wcmltYXJ5LCAxMCk7XG4gIH1cblxuICAmLnNoZXBoZXJkLWJ1dHRvbi1zZWNvbmRhcnkge1xuICAgIGJhY2tncm91bmQ6ICRzaGVwaGVyZC10aGVtZS1zZWNvbmRhcnk7XG4gICAgY29sb3I6IG1hcF9nZXQoJHNoZXBoZXJkLXRoZW1lLXRleHQtY29sb3JzLCBzZWNvbmRhcnkpO1xuXG4gICAgJjpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kOiBkYXJrZW4oJHNoZXBoZXJkLXRoZW1lLXNlY29uZGFyeSwgMTApO1xuICAgICAgY29sb3I6IGRhcmtlbihtYXBfZ2V0KCRzaGVwaGVyZC10aGVtZS10ZXh0LWNvbG9ycywgc2Vjb25kYXJ5KSwgMTApO1xuICAgIH1cbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */